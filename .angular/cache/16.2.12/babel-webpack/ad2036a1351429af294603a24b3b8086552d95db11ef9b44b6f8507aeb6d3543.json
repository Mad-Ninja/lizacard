{"ast":null,"code":"/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar zoomSettings = {\n  scale: 1,\n  zoom: true,\n  infiniteZoom: true,\n  actualSize: true,\n  showZoomInOutIcons: false,\n  actualSizeIcons: {\n    zoomIn: 'lg-zoom-in',\n    zoomOut: 'lg-zoom-out'\n  },\n  enableZoomAfter: 300,\n  zoomPluginStrings: {\n    zoomIn: 'Zoom in',\n    zoomOut: 'Zoom out',\n    viewActualSize: 'View actual size'\n  }\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\nvar lGEvents = {\n  afterAppendSlide: 'lgAfterAppendSlide',\n  init: 'lgInit',\n  hasVideo: 'lgHasVideo',\n  containerResize: 'lgContainerResize',\n  updateSlides: 'lgUpdateSlides',\n  afterAppendSubHtml: 'lgAfterAppendSubHtml',\n  beforeOpen: 'lgBeforeOpen',\n  afterOpen: 'lgAfterOpen',\n  slideItemLoad: 'lgSlideItemLoad',\n  beforeSlide: 'lgBeforeSlide',\n  afterSlide: 'lgAfterSlide',\n  posterClick: 'lgPosterClick',\n  dragStart: 'lgDragStart',\n  dragMove: 'lgDragMove',\n  dragEnd: 'lgDragEnd',\n  beforeNextSlide: 'lgBeforeNextSlide',\n  beforePrevSlide: 'lgBeforePrevSlide',\n  beforeClose: 'lgBeforeClose',\n  afterClose: 'lgAfterClose',\n  rotateLeft: 'lgRotateLeft',\n  rotateRight: 'lgRotateRight',\n  flipHorizontal: 'lgFlipHorizontal',\n  flipVertical: 'lgFlipVertical',\n  autoplay: 'lgAutoplay',\n  autoplayStart: 'lgAutoplayStart',\n  autoplayStop: 'lgAutoplayStop'\n};\nvar ZOOM_TRANSITION_DURATION = 500;\nvar Zoom = /** @class */function () {\n  function Zoom(instance, $LG) {\n    // get lightGallery core plugin instance\n    this.core = instance;\n    this.$LG = $LG;\n    this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\n    return this;\n  }\n  // Append Zoom controls. Actual size, Zoom-in, Zoom-out\n  Zoom.prototype.buildTemplates = function () {\n    var zoomIcons = this.settings.showZoomInOutIcons ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\" : '';\n    if (this.settings.actualSize) {\n      zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['viewActualSize'] + \"\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\n    }\n    this.core.outer.addClass('lg-use-transition-for-zoom');\n    this.core.$toolbar.first().append(zoomIcons);\n  };\n  /**\r\n   * @desc Enable zoom option only once the image is completely loaded\r\n   * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n   *\r\n   * Zoom styles are defined under lg-zoomable CSS class.\r\n   */\n  Zoom.prototype.enableZoom = function (event) {\n    var _this = this;\n    // delay will be 0 except first time\n    var _speed = this.settings.enableZoomAfter + event.detail.delay;\n    // set _speed value 0 if gallery opened from direct url and if it is first slide\n    if (this.$LG('body').first().hasClass('lg-from-hash') && event.detail.delay) {\n      // will execute only once\n      _speed = 0;\n    } else {\n      // Remove lg-from-hash to enable starting animation.\n      this.$LG('body').first().removeClass('lg-from-hash');\n    }\n    this.zoomableTimeout = setTimeout(function () {\n      if (!_this.isImageSlide(_this.core.index)) {\n        return;\n      }\n      _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\n      if (event.detail.index === _this.core.index) {\n        _this.setZoomEssentials();\n      }\n    }, _speed + 30);\n  };\n  Zoom.prototype.enableZoomOnSlideItemLoad = function () {\n    // Add zoomable class\n    this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\n  };\n  Zoom.prototype.getDragCords = function (e) {\n    return {\n      x: e.pageX,\n      y: e.pageY\n    };\n  };\n  Zoom.prototype.getSwipeCords = function (e) {\n    var x = e.touches[0].pageX;\n    var y = e.touches[0].pageY;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {\n    var $image = this.core.getSlideItem(this.core.index).find('.lg-image').first().get();\n    var height = 0;\n    var width = 0;\n    var rect = $image.getBoundingClientRect();\n    if (scale) {\n      height = $image.offsetHeight * scale;\n      width = $image.offsetWidth * scale;\n    } else if (scaleDiff) {\n      height = rect.height + scaleDiff * rect.height;\n      width = rect.width + scaleDiff * rect.width;\n    } else {\n      height = rect.height;\n      width = rect.width;\n    }\n    var allowY = height > this.containerRect.height;\n    var allowX = width > this.containerRect.width;\n    return {\n      allowX: allowX,\n      allowY: allowY\n    };\n  };\n  Zoom.prototype.setZoomEssentials = function () {\n    this.containerRect = this.core.$content.get().getBoundingClientRect();\n  };\n  /**\r\n   * @desc Image zoom\r\n   * Translate the wrap and scale the image to get better user experience\r\n   *\r\n   * @param {String} scale - Zoom decrement/increment value\r\n   */\n  Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {\n    if (Math.abs(scaleDiff) <= 0) return;\n    var offsetX = this.containerRect.width / 2 + this.containerRect.left;\n    var offsetY = this.containerRect.height / 2 + this.containerRect.top + this.scrollTop;\n    var originalX;\n    var originalY;\n    if (scale === 1) {\n      this.positionChanged = false;\n    }\n    var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\n    var allowY = dragAllowedAxises.allowY,\n      allowX = dragAllowedAxises.allowX;\n    if (this.positionChanged) {\n      originalX = this.left / (this.scale - scaleDiff);\n      originalY = this.top / (this.scale - scaleDiff);\n      this.pageX = offsetX - originalX;\n      this.pageY = offsetY - originalY;\n      this.positionChanged = false;\n    }\n    var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\n    var x;\n    var y;\n    var _x = offsetX - this.pageX;\n    var _y = offsetY - this.pageY;\n    if (scale - scaleDiff > 1) {\n      var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\n      _x = (scaleDiff < 0 ? -_x : _x) + this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\n      _y = (scaleDiff < 0 ? -_y : _y) + this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\n      x = _x / scaleVal;\n      y = _y / scaleVal;\n    } else {\n      var scaleVal = (scale - scaleDiff) * scaleDiff;\n      x = _x * scaleVal;\n      y = _y * scaleVal;\n    }\n    if (reposition) {\n      if (allowX) {\n        if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\n          x = possibleSwipeCords.minX;\n        } else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\n          x = possibleSwipeCords.maxX;\n        }\n      } else {\n        if (scale > 1) {\n          if (x < possibleSwipeCords.minX) {\n            x = possibleSwipeCords.minX;\n          } else if (x > possibleSwipeCords.maxX) {\n            x = possibleSwipeCords.maxX;\n          }\n        }\n      }\n      // @todo fix this\n      if (allowY) {\n        if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\n          y = possibleSwipeCords.minY;\n        } else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\n          y = possibleSwipeCords.maxY;\n        }\n      } else {\n        // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\n        if (scale > 1) {\n          //If image goes beyond viewport top, use the minim possible translate value\n          if (y < possibleSwipeCords.minY) {\n            y = possibleSwipeCords.minY;\n          } else if (y > possibleSwipeCords.maxY) {\n            y = possibleSwipeCords.maxY;\n          }\n        }\n      }\n    }\n    this.setZoomStyles({\n      x: x,\n      y: y,\n      scale: scale\n    });\n    this.left = x;\n    this.top = y;\n    if (resetToMax) {\n      this.setZoomImageSize();\n    }\n  };\n  Zoom.prototype.resetImageTranslate = function (index) {\n    if (!this.isImageSlide(index)) {\n      return;\n    }\n    var $image = this.core.getSlideItem(index).find('.lg-image').first();\n    this.imageReset = false;\n    $image.removeClass('reset-transition reset-transition-y reset-transition-x');\n    this.core.outer.removeClass('lg-actual-size');\n    $image.css('width', 'auto').css('height', 'auto');\n    setTimeout(function () {\n      $image.removeClass('no-transition');\n    }, 10);\n  };\n  Zoom.prototype.setZoomImageSize = function () {\n    var _this = this;\n    var $image = this.core.getSlideItem(this.core.index).find('.lg-image').first();\n    setTimeout(function () {\n      var actualSizeScale = _this.getCurrentImageActualSizeScale();\n      if (_this.scale >= actualSizeScale) {\n        $image.addClass('no-transition');\n        _this.imageReset = true;\n      }\n    }, ZOOM_TRANSITION_DURATION);\n    setTimeout(function () {\n      var actualSizeScale = _this.getCurrentImageActualSizeScale();\n      if (_this.scale >= actualSizeScale) {\n        var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);\n        $image.css('width', $image.get().naturalWidth + 'px').css('height', $image.get().naturalHeight + 'px');\n        _this.core.outer.addClass('lg-actual-size');\n        if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\n          $image.addClass('reset-transition');\n        } else if (dragAllowedAxises.allowX && !dragAllowedAxises.allowY) {\n          $image.addClass('reset-transition-x');\n        } else if (!dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\n          $image.addClass('reset-transition-y');\n        }\n      }\n    }, ZOOM_TRANSITION_DURATION + 50);\n  };\n  /**\r\n   * @desc apply scale3d to image and translate to image wrap\r\n   * @param {style} X,Y and scale\r\n   */\n  Zoom.prototype.setZoomStyles = function (style) {\n    var $imageWrap = this.core.getSlideItem(this.core.index).find('.lg-img-wrap').first();\n    var $image = this.core.getSlideItem(this.core.index).find('.lg-image').first();\n    var $dummyImage = this.core.outer.find('.lg-current .lg-dummy-img').first();\n    this.scale = style.scale;\n    $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\n    $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\n    var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\n    $imageWrap.css('transform', transform);\n  };\n  /**\r\n   * @param index - Index of the current slide\r\n   * @param event - event will be available only if the function is called on clicking/taping the imags\r\n   */\n  Zoom.prototype.setActualSize = function (index, event) {\n    var _this = this;\n    if (this.zoomInProgress) {\n      return;\n    }\n    this.zoomInProgress = true;\n    var currentItem = this.core.galleryItems[this.core.index];\n    this.resetImageTranslate(index);\n    setTimeout(function () {\n      // Allow zoom only on image\n      if (!currentItem.src || _this.core.outer.hasClass('lg-first-slide-loading')) {\n        return;\n      }\n      var scale = _this.getCurrentImageActualSizeScale();\n      var prevScale = _this.scale;\n      if (_this.core.outer.hasClass('lg-zoomed')) {\n        _this.scale = 1;\n      } else {\n        _this.scale = _this.getScale(scale);\n      }\n      _this.setPageCords(event);\n      _this.beginZoom(_this.scale);\n      _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);\n    }, 50);\n    setTimeout(function () {\n      _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\n    }, 60);\n    setTimeout(function () {\n      _this.zoomInProgress = false;\n    }, ZOOM_TRANSITION_DURATION + 110);\n  };\n  Zoom.prototype.getNaturalWidth = function (index) {\n    var $image = this.core.getSlideItem(index).find('.lg-image').first();\n    var naturalWidth = this.core.galleryItems[index].width;\n    return naturalWidth ? parseFloat(naturalWidth) : $image.get().naturalWidth;\n  };\n  Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\n    var _scale;\n    var scale;\n    if (naturalWidth >= width) {\n      _scale = naturalWidth / width;\n      scale = _scale || 2;\n    } else {\n      scale = 1;\n    }\n    return scale;\n  };\n  Zoom.prototype.getCurrentImageActualSizeScale = function () {\n    var $image = this.core.getSlideItem(this.core.index).find('.lg-image').first();\n    var width = $image.get().offsetWidth;\n    var naturalWidth = this.getNaturalWidth(this.core.index) || width;\n    return this.getActualSizeScale(naturalWidth, width);\n  };\n  Zoom.prototype.getPageCords = function (event) {\n    var cords = {};\n    if (event) {\n      cords.x = event.pageX || event.touches[0].pageX;\n      cords.y = event.pageY || event.touches[0].pageY;\n    } else {\n      var containerRect = this.core.$content.get().getBoundingClientRect();\n      cords.x = containerRect.width / 2 + containerRect.left;\n      cords.y = containerRect.height / 2 + this.scrollTop + containerRect.top;\n    }\n    return cords;\n  };\n  Zoom.prototype.setPageCords = function (event) {\n    var pageCords = this.getPageCords(event);\n    this.pageX = pageCords.x;\n    this.pageY = pageCords.y;\n  };\n  Zoom.prototype.manageActualPixelClassNames = function () {\n    var $actualSize = this.core.getElementById('lg-actual-size');\n    $actualSize.removeClass(this.settings.actualSizeIcons.zoomIn).addClass(this.settings.actualSizeIcons.zoomOut);\n  };\n  // If true, zoomed - in else zoomed out\n  Zoom.prototype.beginZoom = function (scale) {\n    this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\n    if (scale > 1) {\n      this.core.outer.addClass('lg-zoomed');\n      this.manageActualPixelClassNames();\n    } else {\n      this.resetZoom();\n    }\n    return scale > 1;\n  };\n  Zoom.prototype.getScale = function (scale) {\n    var actualSizeScale = this.getCurrentImageActualSizeScale();\n    if (scale < 1) {\n      scale = 1;\n    } else if (scale > actualSizeScale) {\n      scale = actualSizeScale;\n    }\n    return scale;\n  };\n  Zoom.prototype.init = function () {\n    var _this = this;\n    if (!this.settings.zoom) {\n      return;\n    }\n    this.buildTemplates();\n    this.enableZoomOnSlideItemLoad();\n    var tapped = null;\n    this.core.outer.on('dblclick.lg', function (event) {\n      if (!_this.$LG(event.target).hasClass('lg-image')) {\n        return;\n      }\n      _this.setActualSize(_this.core.index, event);\n    });\n    this.core.outer.on('touchstart.lg', function (event) {\n      var $target = _this.$LG(event.target);\n      if (event.touches.length === 1 && $target.hasClass('lg-image')) {\n        if (!tapped) {\n          tapped = setTimeout(function () {\n            tapped = null;\n          }, 300);\n        } else {\n          clearTimeout(tapped);\n          tapped = null;\n          event.preventDefault();\n          _this.setActualSize(_this.core.index, event);\n        }\n      }\n    });\n    this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\n      if (!_this.core.lgOpened || !_this.isImageSlide(_this.core.index) || _this.core.touchAction) {\n        return;\n      }\n      var _LGel = _this.core.getSlideItem(_this.core.index).find('.lg-img-wrap').first();\n      _this.top = 0;\n      _this.left = 0;\n      _this.setZoomEssentials();\n      _this.setZoomSwipeStyles(_LGel, {\n        x: 0,\n        y: 0\n      });\n      _this.positionChanged = true;\n    });\n    // Update zoom on resize and orientationchange\n    this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\n      if (!_this.core.lgOpened) return;\n      _this.scrollTop = _this.$LG(window).scrollTop();\n    });\n    this.core.getElementById('lg-zoom-out').on('click.lg', function () {\n      // Allow zoom only on image\n      if (!_this.isImageSlide(_this.core.index)) {\n        return;\n      }\n      var timeout = 0;\n      if (_this.imageReset) {\n        _this.resetImageTranslate(_this.core.index);\n        timeout = 50;\n      }\n      setTimeout(function () {\n        var scale = _this.scale - _this.settings.scale;\n        if (scale < 1) {\n          scale = 1;\n        }\n        _this.beginZoom(scale);\n        _this.zoomImage(scale, -_this.settings.scale, true, !_this.settings.infiniteZoom);\n      }, timeout);\n    });\n    this.core.getElementById('lg-zoom-in').on('click.lg', function () {\n      _this.zoomIn();\n    });\n    this.core.getElementById('lg-actual-size').on('click.lg', function () {\n      _this.setActualSize(_this.core.index);\n    });\n    this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\n      _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\n    });\n    this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\n      _this.scrollTop = _this.$LG(window).scrollTop();\n      // Set the initial value center\n      _this.pageX = _this.core.outer.width() / 2;\n      _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\n      _this.scale = 1;\n    });\n    // Reset zoom on slide change\n    this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\n      var prevIndex = event.detail.prevIndex;\n      _this.scale = 1;\n      _this.positionChanged = false;\n      _this.zoomInProgress = false;\n      _this.resetZoom(prevIndex);\n      _this.resetImageTranslate(prevIndex);\n      if (_this.isImageSlide(_this.core.index)) {\n        _this.setZoomEssentials();\n      }\n    });\n    // Drag option after zoom\n    this.zoomDrag();\n    this.pinchZoom();\n    this.zoomSwipe();\n    // Store the zoomable timeout value just to clear it while closing\n    this.zoomableTimeout = false;\n    this.positionChanged = false;\n    this.zoomInProgress = false;\n  };\n  Zoom.prototype.zoomIn = function () {\n    // Allow zoom only on image\n    if (!this.isImageSlide(this.core.index)) {\n      return;\n    }\n    var scale = this.scale + this.settings.scale;\n    if (!this.settings.infiniteZoom) {\n      scale = this.getScale(scale);\n    }\n    this.beginZoom(scale);\n    this.zoomImage(scale, Math.min(this.settings.scale, scale - this.scale), true, !this.settings.infiniteZoom);\n  };\n  // Reset zoom effect\n  Zoom.prototype.resetZoom = function (index) {\n    this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\n    var $actualSize = this.core.getElementById('lg-actual-size');\n    var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\n    $actualSize.removeClass(this.settings.actualSizeIcons.zoomOut).addClass(this.settings.actualSizeIcons.zoomIn);\n    $item.find('.lg-img-wrap').first().removeAttr('style');\n    $item.find('.lg-image').first().removeAttr('style');\n    this.scale = 1;\n    this.left = 0;\n    this.top = 0;\n    // Reset pagx pagy values to center\n    this.setPageCords();\n  };\n  Zoom.prototype.getTouchDistance = function (e) {\n    return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) * (e.touches[0].pageX - e.touches[1].pageX) + (e.touches[0].pageY - e.touches[1].pageY) * (e.touches[0].pageY - e.touches[1].pageY));\n  };\n  Zoom.prototype.pinchZoom = function () {\n    var _this = this;\n    var startDist = 0;\n    var pinchStarted = false;\n    var initScale = 1;\n    var prevScale = 0;\n    var $item = this.core.getSlideItem(this.core.index);\n    this.core.outer.on('touchstart.lg', function (e) {\n      $item = _this.core.getSlideItem(_this.core.index);\n      if (!_this.isImageSlide(_this.core.index)) {\n        return;\n      }\n      if (e.touches.length === 2) {\n        e.preventDefault();\n        if (_this.core.outer.hasClass('lg-first-slide-loading')) {\n          return;\n        }\n        initScale = _this.scale || 1;\n        _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\n        _this.setPageCords(e);\n        _this.resetImageTranslate(_this.core.index);\n        _this.core.touchAction = 'pinch';\n        startDist = _this.getTouchDistance(e);\n      }\n    });\n    this.core.$inner.on('touchmove.lg', function (e) {\n      if (e.touches.length === 2 && _this.core.touchAction === 'pinch' && (_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target))) {\n        e.preventDefault();\n        var endDist = _this.getTouchDistance(e);\n        var distance = startDist - endDist;\n        if (!pinchStarted && Math.abs(distance) > 5) {\n          pinchStarted = true;\n        }\n        if (pinchStarted) {\n          prevScale = _this.scale;\n          var _scale = Math.max(1, initScale + -distance * 0.02);\n          _this.scale = Math.round((_scale + Number.EPSILON) * 100) / 100;\n          var diff = _this.scale - prevScale;\n          _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);\n        }\n      }\n    });\n    this.core.$inner.on('touchend.lg', function (e) {\n      if (_this.core.touchAction === 'pinch' && (_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target))) {\n        pinchStarted = false;\n        startDist = 0;\n        if (_this.scale <= 1) {\n          _this.resetZoom();\n        } else {\n          var actualSizeScale = _this.getCurrentImageActualSizeScale();\n          if (_this.scale >= actualSizeScale) {\n            var scaleDiff = actualSizeScale - _this.scale;\n            if (scaleDiff === 0) {\n              scaleDiff = 0.01;\n            }\n            _this.zoomImage(actualSizeScale, scaleDiff, false, true);\n          }\n          _this.manageActualPixelClassNames();\n          _this.core.outer.addClass('lg-zoomed');\n        }\n        _this.core.touchAction = undefined;\n      }\n    });\n  };\n  Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {\n    var distanceXnew = endCoords.x - startCoords.x;\n    var distanceYnew = endCoords.y - startCoords.y;\n    var speedX = Math.abs(distanceXnew) / touchDuration + 1;\n    var speedY = Math.abs(distanceYnew) / touchDuration + 1;\n    if (speedX > 2) {\n      speedX += 1;\n    }\n    if (speedY > 2) {\n      speedY += 1;\n    }\n    distanceXnew = distanceXnew * speedX;\n    distanceYnew = distanceYnew * speedY;\n    var _LGel = this.core.getSlideItem(this.core.index).find('.lg-img-wrap').first();\n    var distance = {};\n    distance.x = this.left + distanceXnew;\n    distance.y = this.top + distanceYnew;\n    var possibleSwipeCords = this.getPossibleSwipeDragCords();\n    if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\n      if (allowY) {\n        if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\n          distance.y = possibleSwipeCords.minY;\n        } else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\n          distance.y = possibleSwipeCords.maxY;\n        }\n      }\n      if (allowX) {\n        if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\n          distance.x = possibleSwipeCords.minX;\n        } else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\n          distance.x = possibleSwipeCords.maxX;\n        }\n      }\n      if (allowY) {\n        this.top = distance.y;\n      } else {\n        distance.y = this.top;\n      }\n      if (allowX) {\n        this.left = distance.x;\n      } else {\n        distance.x = this.left;\n      }\n      this.setZoomSwipeStyles(_LGel, distance);\n      this.positionChanged = true;\n    }\n  };\n  Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\n    var distance = {};\n    if (allowY) {\n      distance.y = this.top + (endCoords.y - startCoords.y);\n      if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\n        var diffMinY = possibleSwipeCords.minY - distance.y;\n        distance.y = possibleSwipeCords.minY - diffMinY / 6;\n      } else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\n        var diffMaxY = distance.y - possibleSwipeCords.maxY;\n        distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\n      }\n    } else {\n      distance.y = this.top;\n    }\n    if (allowX) {\n      distance.x = this.left + (endCoords.x - startCoords.x);\n      if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\n        var diffMinX = possibleSwipeCords.minX - distance.x;\n        distance.x = possibleSwipeCords.minX - diffMinX / 6;\n      } else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\n        var difMaxX = distance.x - possibleSwipeCords.maxX;\n        distance.x = possibleSwipeCords.maxX + difMaxX / 6;\n      }\n    } else {\n      distance.x = this.left;\n    }\n    return distance;\n  };\n  Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\n    return x >= minX;\n  };\n  Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\n    return x <= maxX;\n  };\n  Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\n    return y >= minY;\n  };\n  Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\n    return y <= maxY;\n  };\n  Zoom.prototype.isImageSlide = function (index) {\n    var currentItem = this.core.galleryItems[index];\n    return this.core.getSlideType(currentItem) === 'image';\n  };\n  Zoom.prototype.getPossibleSwipeDragCords = function (scale) {\n    var $image = this.core.getSlideItem(this.core.index).find('.lg-image').first();\n    var bottom = this.core.mediaContainerPosition.bottom;\n    var imgRect = $image.get().getBoundingClientRect();\n    var imageHeight = imgRect.height;\n    var imageWidth = imgRect.width;\n    if (scale) {\n      imageHeight = imageHeight + scale * imageHeight;\n      imageWidth = imageWidth + scale * imageWidth;\n    }\n    var minY = (imageHeight - this.containerRect.height) / 2;\n    var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\n    var minX = (imageWidth - this.containerRect.width) / 2;\n    var maxX = (this.containerRect.width - imageWidth) / 2;\n    var possibleSwipeCords = {\n      minY: minY,\n      maxY: maxY,\n      minX: minX,\n      maxX: maxX\n    };\n    return possibleSwipeCords;\n  };\n  Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\n    LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\n  };\n  Zoom.prototype.zoomSwipe = function () {\n    var _this = this;\n    var startCoords = {};\n    var endCoords = {};\n    var isMoved = false;\n    // Allow x direction drag\n    var allowX = false;\n    // Allow Y direction drag\n    var allowY = false;\n    var startTime = new Date();\n    var endTime = new Date();\n    var possibleSwipeCords;\n    var _LGel;\n    var $item = this.core.getSlideItem(this.core.index);\n    this.core.$inner.on('touchstart.lg', function (e) {\n      // Allow zoom only on image\n      if (!_this.isImageSlide(_this.core.index)) {\n        return;\n      }\n      $item = _this.core.getSlideItem(_this.core.index);\n      if ((_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target)) && e.touches.length === 1 && _this.core.outer.hasClass('lg-zoomed')) {\n        e.preventDefault();\n        startTime = new Date();\n        _this.core.touchAction = 'zoomSwipe';\n        _LGel = _this.core.getSlideItem(_this.core.index).find('.lg-img-wrap').first();\n        var dragAllowedAxises = _this.getDragAllowedAxises(0);\n        allowY = dragAllowedAxises.allowY;\n        allowX = dragAllowedAxises.allowX;\n        if (allowX || allowY) {\n          startCoords = _this.getSwipeCords(e);\n        }\n        possibleSwipeCords = _this.getPossibleSwipeDragCords();\n        // reset opacity and transition duration\n        _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\n      }\n    });\n    this.core.$inner.on('touchmove.lg', function (e) {\n      if (e.touches.length === 1 && _this.core.touchAction === 'zoomSwipe' && (_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target))) {\n        e.preventDefault();\n        _this.core.touchAction = 'zoomSwipe';\n        endCoords = _this.getSwipeCords(e);\n        var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\n        if (Math.abs(endCoords.x - startCoords.x) > 15 || Math.abs(endCoords.y - startCoords.y) > 15) {\n          isMoved = true;\n          _this.setZoomSwipeStyles(_LGel, distance);\n        }\n      }\n    });\n    this.core.$inner.on('touchend.lg', function (e) {\n      if (_this.core.touchAction === 'zoomSwipe' && (_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target))) {\n        e.preventDefault();\n        _this.core.touchAction = undefined;\n        _this.core.outer.removeClass('lg-zoom-dragging');\n        if (!isMoved) {\n          return;\n        }\n        isMoved = false;\n        endTime = new Date();\n        var touchDuration = endTime.valueOf() - startTime.valueOf();\n        _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\n      }\n    });\n  };\n  Zoom.prototype.zoomDrag = function () {\n    var _this = this;\n    var startCoords = {};\n    var endCoords = {};\n    var isDragging = false;\n    var isMoved = false;\n    // Allow x direction drag\n    var allowX = false;\n    // Allow Y direction drag\n    var allowY = false;\n    var startTime;\n    var endTime;\n    var possibleSwipeCords;\n    var _LGel;\n    this.core.outer.on('mousedown.lg.zoom', function (e) {\n      // Allow zoom only on image\n      if (!_this.isImageSlide(_this.core.index)) {\n        return;\n      }\n      var $item = _this.core.getSlideItem(_this.core.index);\n      if (_this.$LG(e.target).hasClass('lg-item') || $item.get().contains(e.target)) {\n        startTime = new Date();\n        _LGel = _this.core.getSlideItem(_this.core.index).find('.lg-img-wrap').first();\n        var dragAllowedAxises = _this.getDragAllowedAxises(0);\n        allowY = dragAllowedAxises.allowY;\n        allowX = dragAllowedAxises.allowX;\n        if (_this.core.outer.hasClass('lg-zoomed')) {\n          if (_this.$LG(e.target).hasClass('lg-object') && (allowX || allowY)) {\n            e.preventDefault();\n            startCoords = _this.getDragCords(e);\n            possibleSwipeCords = _this.getPossibleSwipeDragCords();\n            isDragging = true;\n            _this.core.outer.removeClass('lg-grab').addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\n            // reset opacity and transition duration\n          }\n        }\n      }\n    });\n\n    this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\n      if (isDragging) {\n        isMoved = true;\n        endCoords = _this.getDragCords(e);\n        var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\n        _this.setZoomSwipeStyles(_LGel, distance);\n      }\n    });\n    this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\n      if (isDragging) {\n        endTime = new Date();\n        isDragging = false;\n        _this.core.outer.removeClass('lg-zoom-dragging');\n        // Fix for chrome mouse move on click\n        if (isMoved && (startCoords.x !== endCoords.x || startCoords.y !== endCoords.y)) {\n          endCoords = _this.getDragCords(e);\n          var touchDuration = endTime.valueOf() - startTime.valueOf();\n          _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\n        }\n        isMoved = false;\n      }\n      _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\n    });\n  };\n  Zoom.prototype.closeGallery = function () {\n    this.resetZoom();\n    this.zoomInProgress = false;\n  };\n  Zoom.prototype.destroy = function () {\n    // Unbind all events added by lightGallery zoom plugin\n    this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\n    this.core.LGel.off('.lg.zoom');\n    this.core.LGel.off('.zoom');\n    clearTimeout(this.zoomableTimeout);\n    this.zoomableTimeout = false;\n  };\n  return Zoom;\n}();\nexport default Zoom;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","zoomSettings","scale","zoom","infiniteZoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","zoomPluginStrings","viewActualSize","lGEvents","afterAppendSlide","init","hasVideo","containerResize","updateSlides","afterAppendSubHtml","beforeOpen","afterOpen","slideItemLoad","beforeSlide","afterSlide","posterClick","dragStart","dragMove","dragEnd","beforeNextSlide","beforePrevSlide","beforeClose","afterClose","rotateLeft","rotateRight","flipHorizontal","flipVertical","autoplay","autoplayStart","autoplayStop","ZOOM_TRANSITION_DURATION","Zoom","instance","$LG","core","settings","buildTemplates","zoomIcons","getIdName","outer","addClass","$toolbar","first","append","enableZoom","event","_this","_speed","detail","delay","hasClass","removeClass","zoomableTimeout","setTimeout","isImageSlide","index","getSlideItem","setZoomEssentials","enableZoomOnSlideItemLoad","LGel","on","bind","getDragCords","e","x","pageX","y","pageY","getSwipeCords","touches","getDragAllowedAxises","scaleDiff","$image","find","get","height","width","rect","getBoundingClientRect","offsetHeight","offsetWidth","allowY","containerRect","allowX","$content","zoomImage","reposition","resetToMax","Math","abs","offsetX","left","offsetY","top","scrollTop","originalX","originalY","positionChanged","dragAllowedAxises","possibleSwipeCords","getPossibleSwipeDragCords","_x","_y","scaleVal","isBeyondPossibleLeft","minX","isBeyondPossibleRight","maxX","isBeyondPossibleTop","minY","isBeyondPossibleBottom","maxY","setZoomStyles","setZoomImageSize","resetImageTranslate","imageReset","css","actualSizeScale","getCurrentImageActualSizeScale","naturalWidth","naturalHeight","style","$imageWrap","$dummyImage","transform","setActualSize","zoomInProgress","currentItem","galleryItems","src","prevScale","getScale","setPageCords","beginZoom","getNaturalWidth","parseFloat","getActualSizeScale","_scale","getPageCords","cords","pageCords","manageActualPixelClassNames","$actualSize","getElementById","resetZoom","tapped","target","$target","clearTimeout","preventDefault","lgOpened","touchAction","_LGel","setZoomSwipeStyles","window","lgId","timeout","prevIndex","zoomDrag","pinchZoom","zoomSwipe","min","$item","undefined","removeAttr","getTouchDistance","sqrt","startDist","pinchStarted","initScale","$inner","contains","endDist","distance","max","round","Number","EPSILON","diff","touchendZoom","startCoords","endCoords","touchDuration","distanceXnew","distanceYnew","speedX","speedY","getZoomSwipeCords","diffMinY","diffMaxY","diffMinX","difMaxX","getSlideType","bottom","mediaContainerPosition","imgRect","imageHeight","imageWidth","isMoved","startTime","Date","endTime","valueOf","isDragging","closeGallery","destroy","off"],"sources":["/home/madninja/webstormprojects/cardLizaProject/lizacard-app/node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js"],"sourcesContent":["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar zoomSettings = {\r\n    scale: 1,\r\n    zoom: true,\r\n    infiniteZoom: true,\r\n    actualSize: true,\r\n    showZoomInOutIcons: false,\r\n    actualSizeIcons: {\r\n        zoomIn: 'lg-zoom-in',\r\n        zoomOut: 'lg-zoom-out',\r\n    },\r\n    enableZoomAfter: 300,\r\n    zoomPluginStrings: {\r\n        zoomIn: 'Zoom in',\r\n        zoomOut: 'Zoom out',\r\n        viewActualSize: 'View actual size',\r\n    },\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar ZOOM_TRANSITION_DURATION = 500;\r\nvar Zoom = /** @class */ (function () {\r\n    function Zoom(instance, $LG) {\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n        return this;\r\n    }\r\n    // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n    Zoom.prototype.buildTemplates = function () {\r\n        var zoomIcons = this.settings.showZoomInOutIcons\r\n            ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n            : '';\r\n        if (this.settings.actualSize) {\r\n            zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['viewActualSize'] + \"\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n        }\r\n        this.core.outer.addClass('lg-use-transition-for-zoom');\r\n        this.core.$toolbar.first().append(zoomIcons);\r\n    };\r\n    /**\r\n     * @desc Enable zoom option only once the image is completely loaded\r\n     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n     *\r\n     * Zoom styles are defined under lg-zoomable CSS class.\r\n     */\r\n    Zoom.prototype.enableZoom = function (event) {\r\n        var _this = this;\r\n        // delay will be 0 except first time\r\n        var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n        // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n        if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n            event.detail.delay) {\r\n            // will execute only once\r\n            _speed = 0;\r\n        }\r\n        else {\r\n            // Remove lg-from-hash to enable starting animation.\r\n            this.$LG('body').first().removeClass('lg-from-hash');\r\n        }\r\n        this.zoomableTimeout = setTimeout(function () {\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n            if (event.detail.index === _this.core.index) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        }, _speed + 30);\r\n    };\r\n    Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n        // Add zoomable class\r\n        this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n    };\r\n    Zoom.prototype.getDragCords = function (e) {\r\n        return {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n        };\r\n    };\r\n    Zoom.prototype.getSwipeCords = function (e) {\r\n        var x = e.touches[0].pageX;\r\n        var y = e.touches[0].pageY;\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    };\r\n    Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first()\r\n            .get();\r\n        var height = 0;\r\n        var width = 0;\r\n        var rect = $image.getBoundingClientRect();\r\n        if (scale) {\r\n            height = $image.offsetHeight * scale;\r\n            width = $image.offsetWidth * scale;\r\n        }\r\n        else if (scaleDiff) {\r\n            height = rect.height + scaleDiff * rect.height;\r\n            width = rect.width + scaleDiff * rect.width;\r\n        }\r\n        else {\r\n            height = rect.height;\r\n            width = rect.width;\r\n        }\r\n        var allowY = height > this.containerRect.height;\r\n        var allowX = width > this.containerRect.width;\r\n        return {\r\n            allowX: allowX,\r\n            allowY: allowY,\r\n        };\r\n    };\r\n    Zoom.prototype.setZoomEssentials = function () {\r\n        this.containerRect = this.core.$content.get().getBoundingClientRect();\r\n    };\r\n    /**\r\n     * @desc Image zoom\r\n     * Translate the wrap and scale the image to get better user experience\r\n     *\r\n     * @param {String} scale - Zoom decrement/increment value\r\n     */\r\n    Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {\r\n        if (Math.abs(scaleDiff) <= 0)\r\n            return;\r\n        var offsetX = this.containerRect.width / 2 + this.containerRect.left;\r\n        var offsetY = this.containerRect.height / 2 +\r\n            this.containerRect.top +\r\n            this.scrollTop;\r\n        var originalX;\r\n        var originalY;\r\n        if (scale === 1) {\r\n            this.positionChanged = false;\r\n        }\r\n        var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\r\n        var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;\r\n        if (this.positionChanged) {\r\n            originalX = this.left / (this.scale - scaleDiff);\r\n            originalY = this.top / (this.scale - scaleDiff);\r\n            this.pageX = offsetX - originalX;\r\n            this.pageY = offsetY - originalY;\r\n            this.positionChanged = false;\r\n        }\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\r\n        var x;\r\n        var y;\r\n        var _x = offsetX - this.pageX;\r\n        var _y = offsetY - this.pageY;\r\n        if (scale - scaleDiff > 1) {\r\n            var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\r\n            _x =\r\n                (scaleDiff < 0 ? -_x : _x) +\r\n                    this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            _y =\r\n                (scaleDiff < 0 ? -_y : _y) +\r\n                    this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            x = _x / scaleVal;\r\n            y = _y / scaleVal;\r\n        }\r\n        else {\r\n            var scaleVal = (scale - scaleDiff) * scaleDiff;\r\n            x = _x * scaleVal;\r\n            y = _y * scaleVal;\r\n        }\r\n        if (reposition) {\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\r\n                    x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\r\n                    x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            else {\r\n                if (scale > 1) {\r\n                    if (x < possibleSwipeCords.minX) {\r\n                        x = possibleSwipeCords.minX;\r\n                    }\r\n                    else if (x > possibleSwipeCords.maxX) {\r\n                        x = possibleSwipeCords.maxX;\r\n                    }\r\n                }\r\n            }\r\n            // @todo fix this\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\r\n                    y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\r\n                    y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            else {\r\n                // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\r\n                if (scale > 1) {\r\n                    //If image goes beyond viewport top, use the minim possible translate value\r\n                    if (y < possibleSwipeCords.minY) {\r\n                        y = possibleSwipeCords.minY;\r\n                    }\r\n                    else if (y > possibleSwipeCords.maxY) {\r\n                        y = possibleSwipeCords.maxY;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setZoomStyles({\r\n            x: x,\r\n            y: y,\r\n            scale: scale,\r\n        });\r\n        this.left = x;\r\n        this.top = y;\r\n        if (resetToMax) {\r\n            this.setZoomImageSize();\r\n        }\r\n    };\r\n    Zoom.prototype.resetImageTranslate = function (index) {\r\n        if (!this.isImageSlide(index)) {\r\n            return;\r\n        }\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        this.imageReset = false;\r\n        $image.removeClass('reset-transition reset-transition-y reset-transition-x');\r\n        this.core.outer.removeClass('lg-actual-size');\r\n        $image.css('width', 'auto').css('height', 'auto');\r\n        setTimeout(function () {\r\n            $image.removeClass('no-transition');\r\n        }, 10);\r\n    };\r\n    Zoom.prototype.setZoomImageSize = function () {\r\n        var _this = this;\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                $image.addClass('no-transition');\r\n                _this.imageReset = true;\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION);\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);\r\n                $image\r\n                    .css('width', $image.get().naturalWidth + 'px')\r\n                    .css('height', $image.get().naturalHeight + 'px');\r\n                _this.core.outer.addClass('lg-actual-size');\r\n                if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition');\r\n                }\r\n                else if (dragAllowedAxises.allowX &&\r\n                    !dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-x');\r\n                }\r\n                else if (!dragAllowedAxises.allowX &&\r\n                    dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-y');\r\n                }\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION + 50);\r\n    };\r\n    /**\r\n     * @desc apply scale3d to image and translate to image wrap\r\n     * @param {style} X,Y and scale\r\n     */\r\n    Zoom.prototype.setZoomStyles = function (style) {\r\n        var $imageWrap = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var $dummyImage = this.core.outer\r\n            .find('.lg-current .lg-dummy-img')\r\n            .first();\r\n        this.scale = style.scale;\r\n        $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\r\n        $imageWrap.css('transform', transform);\r\n    };\r\n    /**\r\n     * @param index - Index of the current slide\r\n     * @param event - event will be available only if the function is called on clicking/taping the imags\r\n     */\r\n    Zoom.prototype.setActualSize = function (index, event) {\r\n        var _this = this;\r\n        if (this.zoomInProgress) {\r\n            return;\r\n        }\r\n        this.zoomInProgress = true;\r\n        var currentItem = this.core.galleryItems[this.core.index];\r\n        this.resetImageTranslate(index);\r\n        setTimeout(function () {\r\n            // Allow zoom only on image\r\n            if (!currentItem.src ||\r\n                _this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                return;\r\n            }\r\n            var scale = _this.getCurrentImageActualSizeScale();\r\n            var prevScale = _this.scale;\r\n            if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                _this.scale = 1;\r\n            }\r\n            else {\r\n                _this.scale = _this.getScale(scale);\r\n            }\r\n            _this.setPageCords(event);\r\n            _this.beginZoom(_this.scale);\r\n            _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);\r\n        }, 50);\r\n        setTimeout(function () {\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        }, 60);\r\n        setTimeout(function () {\r\n            _this.zoomInProgress = false;\r\n        }, ZOOM_TRANSITION_DURATION + 110);\r\n    };\r\n    Zoom.prototype.getNaturalWidth = function (index) {\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        var naturalWidth = this.core.galleryItems[index].width;\r\n        return naturalWidth\r\n            ? parseFloat(naturalWidth)\r\n            : $image.get().naturalWidth;\r\n    };\r\n    Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n        var _scale;\r\n        var scale;\r\n        if (naturalWidth >= width) {\r\n            _scale = naturalWidth / width;\r\n            scale = _scale || 2;\r\n        }\r\n        else {\r\n            scale = 1;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var width = $image.get().offsetWidth;\r\n        var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n        return this.getActualSizeScale(naturalWidth, width);\r\n    };\r\n    Zoom.prototype.getPageCords = function (event) {\r\n        var cords = {};\r\n        if (event) {\r\n            cords.x = event.pageX || event.touches[0].pageX;\r\n            cords.y = event.pageY || event.touches[0].pageY;\r\n        }\r\n        else {\r\n            var containerRect = this.core.$content\r\n                .get()\r\n                .getBoundingClientRect();\r\n            cords.x = containerRect.width / 2 + containerRect.left;\r\n            cords.y =\r\n                containerRect.height / 2 + this.scrollTop + containerRect.top;\r\n        }\r\n        return cords;\r\n    };\r\n    Zoom.prototype.setPageCords = function (event) {\r\n        var pageCords = this.getPageCords(event);\r\n        this.pageX = pageCords.x;\r\n        this.pageY = pageCords.y;\r\n    };\r\n    Zoom.prototype.manageActualPixelClassNames = function () {\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n            .addClass(this.settings.actualSizeIcons.zoomOut);\r\n    };\r\n    // If true, zoomed - in else zoomed out\r\n    Zoom.prototype.beginZoom = function (scale) {\r\n        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n        if (scale > 1) {\r\n            this.core.outer.addClass('lg-zoomed');\r\n            this.manageActualPixelClassNames();\r\n        }\r\n        else {\r\n            this.resetZoom();\r\n        }\r\n        return scale > 1;\r\n    };\r\n    Zoom.prototype.getScale = function (scale) {\r\n        var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n        if (scale < 1) {\r\n            scale = 1;\r\n        }\r\n        else if (scale > actualSizeScale) {\r\n            scale = actualSizeScale;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.init = function () {\r\n        var _this = this;\r\n        if (!this.settings.zoom) {\r\n            return;\r\n        }\r\n        this.buildTemplates();\r\n        this.enableZoomOnSlideItemLoad();\r\n        var tapped = null;\r\n        this.core.outer.on('dblclick.lg', function (event) {\r\n            if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                return;\r\n            }\r\n            _this.setActualSize(_this.core.index, event);\r\n        });\r\n        this.core.outer.on('touchstart.lg', function (event) {\r\n            var $target = _this.$LG(event.target);\r\n            if (event.touches.length === 1 && $target.hasClass('lg-image')) {\r\n                if (!tapped) {\r\n                    tapped = setTimeout(function () {\r\n                        tapped = null;\r\n                    }, 300);\r\n                }\r\n                else {\r\n                    clearTimeout(tapped);\r\n                    tapped = null;\r\n                    event.preventDefault();\r\n                    _this.setActualSize(_this.core.index, event);\r\n                }\r\n            }\r\n        });\r\n        this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\r\n            if (!_this.core.lgOpened ||\r\n                !_this.isImageSlide(_this.core.index) ||\r\n                _this.core.touchAction) {\r\n                return;\r\n            }\r\n            var _LGel = _this.core\r\n                .getSlideItem(_this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            _this.top = 0;\r\n            _this.left = 0;\r\n            _this.setZoomEssentials();\r\n            _this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });\r\n            _this.positionChanged = true;\r\n        });\r\n        // Update zoom on resize and orientationchange\r\n        this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n        });\r\n        this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var timeout = 0;\r\n            if (_this.imageReset) {\r\n                _this.resetImageTranslate(_this.core.index);\r\n                timeout = 50;\r\n            }\r\n            setTimeout(function () {\r\n                var scale = _this.scale - _this.settings.scale;\r\n                if (scale < 1) {\r\n                    scale = 1;\r\n                }\r\n                _this.beginZoom(scale);\r\n                _this.zoomImage(scale, -_this.settings.scale, true, !_this.settings.infiniteZoom);\r\n            }, timeout);\r\n        });\r\n        this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n            _this.zoomIn();\r\n        });\r\n        this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n            _this.setActualSize(_this.core.index);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n            _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n        });\r\n        this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n            // Set the initial value center\r\n            _this.pageX = _this.core.outer.width() / 2;\r\n            _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\r\n            _this.scale = 1;\r\n        });\r\n        // Reset zoom on slide change\r\n        this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n            var prevIndex = event.detail.prevIndex;\r\n            _this.scale = 1;\r\n            _this.positionChanged = false;\r\n            _this.zoomInProgress = false;\r\n            _this.resetZoom(prevIndex);\r\n            _this.resetImageTranslate(prevIndex);\r\n            if (_this.isImageSlide(_this.core.index)) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        });\r\n        // Drag option after zoom\r\n        this.zoomDrag();\r\n        this.pinchZoom();\r\n        this.zoomSwipe();\r\n        // Store the zoomable timeout value just to clear it while closing\r\n        this.zoomableTimeout = false;\r\n        this.positionChanged = false;\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.zoomIn = function () {\r\n        // Allow zoom only on image\r\n        if (!this.isImageSlide(this.core.index)) {\r\n            return;\r\n        }\r\n        var scale = this.scale + this.settings.scale;\r\n        if (!this.settings.infiniteZoom) {\r\n            scale = this.getScale(scale);\r\n        }\r\n        this.beginZoom(scale);\r\n        this.zoomImage(scale, Math.min(this.settings.scale, scale - this.scale), true, !this.settings.infiniteZoom);\r\n    };\r\n    // Reset zoom effect\r\n    Zoom.prototype.resetZoom = function (index) {\r\n        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n            .addClass(this.settings.actualSizeIcons.zoomIn);\r\n        $item.find('.lg-img-wrap').first().removeAttr('style');\r\n        $item.find('.lg-image').first().removeAttr('style');\r\n        this.scale = 1;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        // Reset pagx pagy values to center\r\n        this.setPageCords();\r\n    };\r\n    Zoom.prototype.getTouchDistance = function (e) {\r\n        return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) *\r\n            (e.touches[0].pageX - e.touches[1].pageX) +\r\n            (e.touches[0].pageY - e.touches[1].pageY) *\r\n                (e.touches[0].pageY - e.touches[1].pageY));\r\n    };\r\n    Zoom.prototype.pinchZoom = function () {\r\n        var _this = this;\r\n        var startDist = 0;\r\n        var pinchStarted = false;\r\n        var initScale = 1;\r\n        var prevScale = 0;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.outer.on('touchstart.lg', function (e) {\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            if (e.touches.length === 2) {\r\n                e.preventDefault();\r\n                if (_this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                    return;\r\n                }\r\n                initScale = _this.scale || 1;\r\n                _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                _this.setPageCords(e);\r\n                _this.resetImageTranslate(_this.core.index);\r\n                _this.core.touchAction = 'pinch';\r\n                startDist = _this.getTouchDistance(e);\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 2 &&\r\n                _this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                var endDist = _this.getTouchDistance(e);\r\n                var distance = startDist - endDist;\r\n                if (!pinchStarted && Math.abs(distance) > 5) {\r\n                    pinchStarted = true;\r\n                }\r\n                if (pinchStarted) {\r\n                    prevScale = _this.scale;\r\n                    var _scale = Math.max(1, initScale + -distance * 0.02);\r\n                    _this.scale =\r\n                        Math.round((_scale + Number.EPSILON) * 100) / 100;\r\n                    var diff = _this.scale - prevScale;\r\n                    _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                pinchStarted = false;\r\n                startDist = 0;\r\n                if (_this.scale <= 1) {\r\n                    _this.resetZoom();\r\n                }\r\n                else {\r\n                    var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                    if (_this.scale >= actualSizeScale) {\r\n                        var scaleDiff = actualSizeScale - _this.scale;\r\n                        if (scaleDiff === 0) {\r\n                            scaleDiff = 0.01;\r\n                        }\r\n                        _this.zoomImage(actualSizeScale, scaleDiff, false, true);\r\n                    }\r\n                    _this.manageActualPixelClassNames();\r\n                    _this.core.outer.addClass('lg-zoomed');\r\n                }\r\n                _this.core.touchAction = undefined;\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {\r\n        var distanceXnew = endCoords.x - startCoords.x;\r\n        var distanceYnew = endCoords.y - startCoords.y;\r\n        var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n        var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n        if (speedX > 2) {\r\n            speedX += 1;\r\n        }\r\n        if (speedY > 2) {\r\n            speedY += 1;\r\n        }\r\n        distanceXnew = distanceXnew * speedX;\r\n        distanceYnew = distanceYnew * speedY;\r\n        var _LGel = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var distance = {};\r\n        distance.x = this.left + distanceXnew;\r\n        distance.y = this.top + distanceYnew;\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords();\r\n        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                    distance.y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                    distance.y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                    distance.x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                    distance.x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            if (allowY) {\r\n                this.top = distance.y;\r\n            }\r\n            else {\r\n                distance.y = this.top;\r\n            }\r\n            if (allowX) {\r\n                this.left = distance.x;\r\n            }\r\n            else {\r\n                distance.x = this.left;\r\n            }\r\n            this.setZoomSwipeStyles(_LGel, distance);\r\n            this.positionChanged = true;\r\n        }\r\n    };\r\n    Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\r\n        var distance = {};\r\n        if (allowY) {\r\n            distance.y = this.top + (endCoords.y - startCoords.y);\r\n            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                var diffMinY = possibleSwipeCords.minY - distance.y;\r\n                distance.y = possibleSwipeCords.minY - diffMinY / 6;\r\n            }\r\n            else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                var diffMaxY = distance.y - possibleSwipeCords.maxY;\r\n                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.y = this.top;\r\n        }\r\n        if (allowX) {\r\n            distance.x = this.left + (endCoords.x - startCoords.x);\r\n            if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                var diffMinX = possibleSwipeCords.minX - distance.x;\r\n                distance.x = possibleSwipeCords.minX - diffMinX / 6;\r\n            }\r\n            else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                var difMaxX = distance.x - possibleSwipeCords.maxX;\r\n                distance.x = possibleSwipeCords.maxX + difMaxX / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.x = this.left;\r\n        }\r\n        return distance;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\r\n        return x >= minX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\r\n        return x <= maxX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\r\n        return y >= minY;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\r\n        return y <= maxY;\r\n    };\r\n    Zoom.prototype.isImageSlide = function (index) {\r\n        var currentItem = this.core.galleryItems[index];\r\n        return this.core.getSlideType(currentItem) === 'image';\r\n    };\r\n    Zoom.prototype.getPossibleSwipeDragCords = function (scale) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var bottom = this.core.mediaContainerPosition.bottom;\r\n        var imgRect = $image.get().getBoundingClientRect();\r\n        var imageHeight = imgRect.height;\r\n        var imageWidth = imgRect.width;\r\n        if (scale) {\r\n            imageHeight = imageHeight + scale * imageHeight;\r\n            imageWidth = imageWidth + scale * imageWidth;\r\n        }\r\n        var minY = (imageHeight - this.containerRect.height) / 2;\r\n        var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\r\n        var minX = (imageWidth - this.containerRect.width) / 2;\r\n        var maxX = (this.containerRect.width - imageWidth) / 2;\r\n        var possibleSwipeCords = {\r\n            minY: minY,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            maxX: maxX,\r\n        };\r\n        return possibleSwipeCords;\r\n    };\r\n    Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n        LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n    };\r\n    Zoom.prototype.zoomSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime = new Date();\r\n        var endTime = new Date();\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.$inner.on('touchstart.lg', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) &&\r\n                e.touches.length === 1 &&\r\n                _this.core.outer.hasClass('lg-zoomed')) {\r\n                e.preventDefault();\r\n                startTime = new Date();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (allowX || allowY) {\r\n                    startCoords = _this.getSwipeCords(e);\r\n                }\r\n                possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                // reset opacity and transition duration\r\n                _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 1 &&\r\n                _this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                endCoords = _this.getSwipeCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                    Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                    isMoved = true;\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = undefined;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                if (!isMoved) {\r\n                    return;\r\n                }\r\n                isMoved = false;\r\n                endTime = new Date();\r\n                var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.zoomDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDragging = false;\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime;\r\n        var endTime;\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var $item = _this.core.getSlideItem(_this.core.index);\r\n            if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) {\r\n                startTime = new Date();\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                    if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                        (allowX || allowY)) {\r\n                        e.preventDefault();\r\n                        startCoords = _this.getDragCords(e);\r\n                        possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                        isDragging = true;\r\n                        _this.core.outer\r\n                            .removeClass('lg-grab')\r\n                            .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                        // reset opacity and transition duration\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                isMoved = true;\r\n                endCoords = _this.getDragCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                _this.setZoomSwipeStyles(_LGel, distance);\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                endTime = new Date();\r\n                isDragging = false;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                // Fix for chrome mouse move on click\r\n                if (isMoved &&\r\n                    (startCoords.x !== endCoords.x ||\r\n                        startCoords.y !== endCoords.y)) {\r\n                    endCoords = _this.getDragCords(e);\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n                }\r\n                isMoved = false;\r\n            }\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        });\r\n    };\r\n    Zoom.prototype.closeGallery = function () {\r\n        this.resetZoom();\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.destroy = function () {\r\n        // Unbind all events added by lightGallery zoom plugin\r\n        this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n        this.core.LGel.off('.lg.zoom');\r\n        this.core.LGel.off('.zoom');\r\n        clearTimeout(this.zoomableTimeout);\r\n        this.zoomableTimeout = false;\r\n    };\r\n    return Zoom;\r\n}());\n\nexport default Zoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}